import{r as m,l as u}from"./app-Bdz8U-JN.js";import{a as X}from"./UserAuthenticationContext-B9CgKNWH.js";import{s as Z}from"./DataStoreTemp-dR6HfQ01.js";function z(){var h;const{setLiveGames:f,setLiveGamesUpdate:I,setTempSwarmData:g,setGetBoostedGames:W,setGetSingleGame:K,setTodayGames:k,setGetGamesByCompetition:G,placeBetResponse:w,setPlaceBetResponse:b,setGetPaymentResponse:J,setRegisterRes:c}=m.useContext(Z),{authUser:p,dispatch:S}=m.useContext(X),[T,A]=m.useState(!1),[D,C]=m.useState(null),[B,M]=m.useState(null),[E,O]=m.useState(null),[P,L]=m.useState(null),[x,U]=m.useState(null),[H,F]=m.useState(null),i=m.useRef(null);m.useEffect(()=>{const s=new WebSocket("wss://eu-swarm-test.betconstruct.com/");u.isNil(i.current)&&(i.current=s),s.onopen=()=>{setTimeout(()=>{A(!0)},2500)}},[]),m.useEffect(()=>{i.current.onmessage=s=>{var j;const{data:e,rid:y}=JSON.parse(s==null?void 0:s.data);switch(y){case"1":e!=null&&e.sid&&(M(e),u.isNil(p==null?void 0:p.auth_token)?(v(),_(),d()):o(p));break;case"2":e!=null&&e.auth_token?q():(O(e),console.log(e,"i have reported to the call login error......"));break;case"3":break;case"4":e.auth_token&&(t(e),O(e),n());break;case"5":(e==null?void 0:e.result)=="OK"?(q(),console.log(e,"am reporting to the caller the place bet success"),b(e)):(b(e),console.log(e,"am reporting to the caller the place bet errors"));break;case"6":break;case"7":if(e!=null&&e.auth_token){v(),setTimeout(()=>{_()},2e3),d(),q(),console.log(e,"here is the restored user login data.....");return}else console.log(e,"rejected restore session"),R(),v(),setTimeout(()=>{_()},2e3),d();break;case"8":u.isNil(e)?(console.log(e,"recieved logout response...."),S({type:"AUTHUSERUNLOGGED"}),U({data:e,rid:y})):(console.log(e,"i have passed the logout res to caller"),U({data:e,rid:y}));break;case"9":if(e){const l={...JSON.parse(localStorage.getItem("authUser"))};l.bet_history=e,t(l),a(),N();return}else a(),N();break;case"10":break;case"11":c(JSON.parse(s.data));break;case"12":F(e),console.log(e,"cashout data has been recieved in socket....");break;case"13":(j=e==null?void 0:e.data)!=null&&j.sport&&(C(e),g(e));break;case"14":u.isNil(e)||f(e==null?void 0:e.data),console.log(JSON.parse(s==null?void 0:s.data),"the live games update all.....");break;case"15":W(e==null?void 0:e.data),console.log(e,"boosted games are here........");break;case"16":G(e==null?void 0:e.data),console.log(e,"games by competition are here........");break;case"18":console.log(e,"single game details is here in the socket...."),K(e);break;case"19":if(console.log(e,"transaction data history is here........"),e){const l={...JSON.parse(localStorage.getItem("authUser"))};l.transaction_history=e,t(l)}break;case"20":if(console.log(e,"payment services data are here........"),e){const l={...JSON.parse(localStorage.getItem("authUser"))};l.payment_services=e,t(l)}break;case"21":J(e),console.log(e,"deposit response data is here......");break;default:console.log(JSON.parse(s==null?void 0:s.data),"the main updates.....");break}},i.current.onerror=s=>{console.log("socket error......",s)}},[i.current]);const R=()=>{S({type:"AUTHUSERUNLOGGED"}),console.log("i have cleared prev user")},_=()=>{const s={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name"],game:["info","id","team1_name","team2_name","start_ts","markets_count","strong_team","type","live_events","is_live"],market:["name","type","market_type"],event:["id","price","order","name"]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},game:{is_live:1}}},rid:"14"};setTimeout(()=>{i.current.send(JSON.stringify(s)),console.log(s,"i have requested for live games.....")},2e3)},d=()=>{const s={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","favorite","favorite_order"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},competition:{favorite:!0}}},rid:"15"};console.log(s,"i have requested for boosted games....."),i.current.send(JSON.stringify(s))},v=()=>{const s={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","alias","favorite","favorite_order"],game:["id","team1_id","team2_id","team1_name","team2_name","start_ts","markets_count","market","strong_team","add_info_name","market"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["DoubleChance","MatchResult","OverUnder"]}}},subscribe:!1},rid:"13"};i.current.send(JSON.stringify(s)),console.log("i have requested all the games.....")},q=s=>{const e={command:"get_user",params:{},rid:"4"};i.current.send(JSON.stringify(e))},t=s=>{console.log(s,"authenticated user stored in store...."),S({type:"AUTHUSERLOGGED",payload:{authUser:s}})},o=s=>{const e={command:"restore_login",params:{user_id:Number(s==null?void 0:s.user_id),auth_token:s==null?void 0:s.auth_token},rid:"7"};console.log(e,"i have requested to re-store login......."),i.current.send(JSON.stringify(e))},r=new Date().getTime(),n=s=>{const e={command:"bet_history",params:{where:{from_date:Math.floor(r/1e3)-604800,to_date:r}},rid:"9"};console.log(e,"i have requested for bet history for this user......."),i.current.send(JSON.stringify(e))},a=s=>{const e=new Date().getTime(),y={command:"balance_history",params:{where:{from_date:Math.floor(e/1e3)-7*24*60*60,to_date:e},product:"Sport"},rid:"19"};console.log(y,"i have requested transaction history......."),i.current.send(JSON.stringify(y))},N=s=>{const e={command:"payment_services",params:{detailed:!0},rid:"20"};console.log(e,"i have requested payments wallets......."),i.current.send(JSON.stringify(e))};return[T,D,(h=i.current)==null?void 0:h.send.bind(i.current),B,E,P,x,H,i.current]}function $(){const{getCompAndRegParams:f,setGetGamesByCompetition:I,placeBetReqParams:g,setPlaceBetReqParams:W,liveGamesUpdateKey:K,getGameDetailsParams:k,singleLiveGamesUpdateKey:G,getDepositParams:w}=m.useContext(Z),[b,J,c,p,S,T,A,D,C]=z();function B(){c(JSON.stringify({command:"request_session",params:{site_id:65,language:"eng"},rid:"1"})),console.log("i have requested the session......socket:"+b)}const M=()=>{c(JSON.stringify({command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias","order"],competition:["id","name","favorite_order"],game:["id","team1_id","team2_id","team1_name","team2_name","start_ts","markets_count","market","strong_team","info","add_info_name","market"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["DoubleChance","MatchResult","OverUnder"]}}},subscribe:!1},rid:"13"})),console.log("i have requested all the games.....")};function E(t){const{sport_alias:o,region_alias_collection:r,time_stamp_custom:n}=t,a={command:"get",params:{source:"betting",what:{sport:["alias"],region:["alias"],competition:["name"],game:["id","team1_id","team2_id","team1_name","team2_name","start_ts","markets_count","strong_team","add_info_name"],market:["name"],event:["id","name","price"]},where:{sport:{alias:o},region:{alias:{"@in":r}},game:{start_ts:{"@now":{"@lte":n}}},market:{type:{"@in":["P1XP2"]}}},subscribe:!1}};console.log({params:a}),c(JSON.stringify(a))}const O=t=>{const{username:o,password:r}=t,n={command:"login",params:{username:o,password:r},rid:"2"};console.log(n,"i have sent the login request......"),c(JSON.stringify(n))},P=t=>{const{phone:o,password:r,email:n,username:a,first_name:N,last_name:h,currency:s}=t,e={command:"register_user",params:{user_info:{username:a,password:r,currency_name:"ZMW",lang_code:"arm",country_code:"ZM",email:"calrogerscal@gmail.com"}},rid:"11"};c(JSON.stringify(e)),console.log(e,"i have sent the register request")},L=(t,o)=>{const r=[];o.map(a=>{r.push({event_id:a==null?void 0:a.event_id,price:a==null?void 0:a.market_price})});const n={command:"do_bet",params:{type:r.length>1?2:1,mode:0,amount:t,odd_type:0,bets:r},rid:"5"};c(JSON.stringify(n)),console.log(n,"am about to send request sir....")},x=t=>{const o={command:"secure_logout",params:{jwe_token:t==null?void 0:t.auth_token},rid:"8"};c(JSON.stringify(o)),console.log(o,"logout request.....")},U=t=>{const{bet_id:o,price:r,mode:n}=t,a={command:"cashout",params:{bet_id:o,price:r,mode:1},rid:"12"};c(JSON.stringify(a)),console.log(a,"i have requested for cashout.....")},H=t=>{const o={command:"bet_history",params:{where:{}},rid:"9"};console.log(o,"i have requested for bet history for this user......."),c(JSON.stringify(o))},F=()=>{c(JSON.stringify({command:"whats_up",rid:"14"})),console.log("i have requested for an update.....")},i=t=>{const{game_id:o,region_id:r,competition_id:n}=t,a={command:"get",params:{source:"betting",what:{game:["info","id","team1_name","team2_name","start_ts","markets_count","strong_team","type","live_events"],market:[],event:[]},where:{competition:{id:n},region:{id:r},game:{id:o},market:{}}},rid:"18"};console.log(a,"i have requested for single game details of game_id"+o),c(JSON.stringify(a))},R=()=>{const t={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","favorite","favorite_order"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},competition:{favorite:!0}}},rid:"15"};console.log(t,"i have requested for boosted games....."),c(JSON.stringify(t))},_=()=>{const r=new Date().getTime().toString().substring(0,5).concat(38399),n=Number(r),a={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","favorite","favorite_order"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},game:{start_ts:{"@gt":0,"@lte":n}}}},rid:"17"};console.log(a,"i have requested for games of today....."),c(JSON.stringify(a))},d=t=>{const{compt_id:o,reg_id:r,sport_id:n}=t,a={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type","order"],market:["name","type","market_type"],event:["id","price","order","name"]},where:{sport:{alias:"Soccer"},region:{id:r},market:{market_type:{"@in":["MatchResult"]}},competition:{id:o}}},rid:"16"};console.log(a,"i have requested for single competition of reg id"+(t==null?void 0:t.reg_id)),c(JSON.stringify(a))},v=t=>{const{compt_id:o,reg_id:r,sport_id:n}=t;switch(t==null?void 0:t.identifier){case 1:{getAllLiveGames();break}case 2:{R();break}case 3:{_();break}default:{d({compt_id:o,reg_id:r,sport_id:n});break}}},q=t=>{const{amount:o,currency:r,service:n,customer_id:a,customer_password:N}=t,h={command:"deposit",params:{amount:o,currency:r,service:n,payer:{customer_id:a,customer_password:N}},rid:"21"};console.log(h,"i have sent a deposit request to"+n),c(JSON.stringify(h))};return m.useMemo(()=>{u.isNil(f)||(I(null),setTimeout(()=>{d(f)},100))},[f]),m.useMemo(()=>{u.isNil(k)||i(k),console.log(k,"am executing the testing update....")},[k,G]),m.useMemo(()=>{if(!u.isNil(g)){const{stakeAmount:t,bets:o}=g;L(t,o),console.log(g,"i have invocked the use memo hook to place bet......")}},[g]),m.useMemo(()=>{if(!u.isNil(w)){q(w);return}},[w]),{isReady:b,swarmData:J,authData:p,placeBetRequest:L,writeSessionData:B,getUpcomingGamesByTime:E,getAllFootballGamesCollection:M,loginUserFirstTime:O,userAuth:S,placeBetRes:T,logoutUser:x,logoutRes:A,registerUser:P,requestCashout:U,getAuthUserBetHistory:H,getFilteredGamesCollection:v,cashOutRes:D,getUpdatesWhatsUp:F,getSingleGameDetails:i,getBoostedGames:R,getTodayGamesByTimeStamp:_,socket:C,getGameByRegionAndCompetition:d}}export{$ as F};
