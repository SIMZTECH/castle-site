import{r as m,l as u}from"./app-CRC_HCL3.js";import{a as z}from"./UserAuthenticationContext-hFE-INai.js";import{s as Z}from"./DataStoreTemp-1olddnbH.js";function Q(){var F;const{setLiveGames:h,setLiveGamesUpdate:I,setTempSwarmData:g,setGetBoostedGames:W,setGetSingleGame:X,setTodayGames:y,setGetGamesByCompetition:G,placeBetResponse:q,setPlaceBetResponse:f,setGetPaymentResponse:J}=m.useContext(Z),{authUser:i,dispatch:k}=m.useContext(z),[T,A]=m.useState(!1),[D,C]=m.useState(null),[B,M]=m.useState(null),[E,N]=m.useState(null),[P,K]=m.useState(null),[w,O]=m.useState(null),[L,x]=m.useState(null),[H,R]=m.useState(null),c=m.useRef(null);m.useEffect(()=>{const s=new WebSocket("wss://eu-swarm-test.betconstruct.com/");u.isNil(c.current)&&(c.current=s),s.onopen=()=>{setTimeout(()=>{A(!0)},2500)}},[]),m.useEffect(()=>{c.current.onmessage=s=>{var j;const{data:e,rid:_}=JSON.parse(s==null?void 0:s.data);switch(_){case"1":e!=null&&e.sid&&(M(e),u.isNil(i==null?void 0:i.auth_token)?(S(),d(),b()):r(i));break;case"2":e!=null&&e.auth_token?t():(N(e),console.log(e,"i have reported to the call login error......"));break;case"3":break;case"4":e.auth_token&&(o(e),N(e),a());break;case"5":(e==null?void 0:e.result)=="OK"?(t(),console.log(e,"am reporting to the caller the place bet success"),f(e)):(f(e),console.log(e,"am reporting to the caller the place bet errors"));break;case"6":break;case"7":if(e!=null&&e.auth_token){S(),setTimeout(()=>{d()},2e3),b(),t(),console.log(e,"here is the restored user login data.....");return}else console.log(e,"rejected restore session"),U(),S(),setTimeout(()=>{d()},2e3),b();break;case"8":u.isNil(e)?(console.log(e,"recieved logout response...."),k({type:"AUTHUSERUNLOGGED"}),O({data:e,rid:_})):(console.log(e,"i have passed the logout res to caller"),O({data:e,rid:_}));break;case"9":if(e){const l={...JSON.parse(localStorage.getItem("authUser"))};l.bet_history=e,o(l),v(),p();return}else v(),p();break;case"10":break;case"11":x(e),console.log(e,"user registration data res.....");break;case"12":R(e),console.log(e,"cashout data has been recieved in socket....");break;case"13":(j=e==null?void 0:e.data)!=null&&j.sport&&(C(e),g(e));break;case"14":u.isNil(e)||h(e==null?void 0:e.data),console.log(JSON.parse(s==null?void 0:s.data),"the live games update all.....");break;case"15":W(e==null?void 0:e.data),console.log(e,"boosted games are here........");break;case"16":G(e==null?void 0:e.data),console.log(e,"games by competition are here........");break;case"18":break;case"19":if(console.log(e,"transaction data history is here........"),e){const l={...JSON.parse(localStorage.getItem("authUser"))};l.transaction_history=e,o(l)}break;case"20":if(console.log(e,"payment services data are here........"),e){const l={...JSON.parse(localStorage.getItem("authUser"))};l.payment_services=e,o(l)}break;case"21":J(e),console.log(e,"deposit response data is here......");break;default:console.log(JSON.parse(s==null?void 0:s.data),"the main updates.....");break}},c.current.onerror=s=>{console.log("socket error......",s)}},[c.current]);const U=()=>{k({type:"AUTHUSERUNLOGGED"}),console.log("i have cleared prev user")},d=()=>{const s={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name"],game:["info","id","team1_name","team2_name","start_ts","markets_count","strong_team","type","live_events","is_live"],market:["name","type","market_type"],event:["id","price","order","name"]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},game:{is_live:1}}},rid:"14"};setTimeout(()=>{c.current.send(JSON.stringify(s)),console.log(s,"i have requested for live games.....")},2e3)},b=()=>{const s={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","favorite","favorite_order"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},competition:{favorite:!0}}},rid:"15"};console.log(s,"i have requested for boosted games....."),c.current.send(JSON.stringify(s))},S=()=>{const s={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","alias","favorite","favorite_order"],game:["id","team1_id","team2_id","team1_name","team2_name","start_ts","markets_count","market","strong_team","add_info_name","market"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["DoubleChance","MatchResult","OverUnder"]}}},subscribe:!1},rid:"13"};c.current.send(JSON.stringify(s)),console.log("i have requested all the games.....")},t=s=>{const e={command:"get_user",params:{},rid:"4"};c.current.send(JSON.stringify(e))},o=s=>{console.log(s,"authenticated user stored in store...."),k({type:"AUTHUSERLOGGED",payload:{authUser:s}})},r=s=>{const e={command:"restore_login",params:{user_id:Number(s==null?void 0:s.user_id),auth_token:s==null?void 0:s.auth_token},rid:"7"};console.log(e,"i have requested to re-store login......."),c.current.send(JSON.stringify(e))},n=new Date().getTime(),a=s=>{const e={command:"bet_history",params:{where:{from_date:Math.floor(n/1e3)-604800,to_date:n}},rid:"9"};console.log(e,"i have requested for bet history for this user......."),c.current.send(JSON.stringify(e))},v=s=>{const e=new Date().getTime(),_={command:"balance_history",params:{where:{from_date:Math.floor(e/1e3)-7*24*60*60,to_date:e},product:"Sport"},rid:"19"};console.log(_,"i have requested transaction history......."),c.current.send(JSON.stringify(_))},p=s=>{const e={command:"payment_services",params:{detailed:!0},rid:"20"};console.log(e,"i have requested payments wallets......."),c.current.send(JSON.stringify(e))};return[T,D,(F=c.current)==null?void 0:F.send.bind(c.current),B,E,P,w,L,H]}function ee(){const{getCompAndRegParams:h,setGetGamesByCompetition:I,placeBetReqParams:g,setPlaceBetReqParams:W,liveGamesUpdateKey:X,getGameDetailsParams:y,singleLiveGamesUpdateKey:G,getDepositParams:q}=m.useContext(Z),[f,J,i,k,T,A,D,C,B]=Q();function M(){i(JSON.stringify({command:"request_session",params:{site_id:18762391,language:"eng"},rid:"1"})),console.log("i have requested the session......socket:"+f)}const E=()=>{i(JSON.stringify({command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias","order"],competition:["id","name","favorite_order"],game:["id","team1_id","team2_id","team1_name","team2_name","start_ts","markets_count","market","strong_team","info","add_info_name","market"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["DoubleChance","MatchResult","OverUnder"]}}},subscribe:!1},rid:"13"})),console.log("i have requested all the games.....")};function N(t){const{sport_alias:o,region_alias_collection:r,time_stamp_custom:n}=t,a={command:"get",params:{source:"betting",what:{sport:["alias"],region:["alias"],competition:["name"],game:["id","team1_id","team2_id","team1_name","team2_name","start_ts","markets_count","strong_team","add_info_name"],market:["name"],event:["id","name","price"]},where:{sport:{alias:o},region:{alias:{"@in":r}},game:{start_ts:{"@now":{"@lte":n}}},market:{type:{"@in":["P1XP2"]}}},subscribe:!1}};console.log({params:a}),i(JSON.stringify(a))}const P=t=>{const{username:o,password:r}=t,n={command:"login",params:{username:o,password:r},rid:"2"};console.log(n,"i have sent the login request......"),i(JSON.stringify(n))},K=t=>{const{phone:o,password:r,email:n,username:a,first_name:v,last_name:p,currency:F}=t,s={command:"register_user",params:{user_info:{username:a,password:r,currency_name:"ZMW",lang_code:"arm",country_code:"ZM",email:"calrogerscal@gmail.com"}},rid:"11"};i(JSON.stringify(s)),console.log(s,"i have sent the register request")},w=(t,o)=>{const r=[];o.map(a=>{r.push({event_id:a==null?void 0:a.event_id,price:a==null?void 0:a.market_price})});const n={command:"do_bet",params:{type:r.length>1?2:1,mode:0,amount:t,odd_type:0,bets:r},rid:"5"};i(JSON.stringify(n)),console.log(n,"am about to send request sir....")},O=t=>{const o={command:"secure_logout",params:{jwe_token:t==null?void 0:t.auth_token},rid:"8"};i(JSON.stringify(o)),console.log(o,"logout request.....")},L=t=>{const{bet_id:o,price:r,mode:n}=t,a={command:"cashout",params:{bet_id:o,price:r,mode:1},rid:"12"};i(JSON.stringify(a)),console.log(a,"i have requested for cashout.....")},x=t=>{const o={command:"bet_history",params:{where:{}},rid:"9"};console.log(o,"i have requested for bet history for this user......."),i(JSON.stringify(o))},H=()=>{i(JSON.stringify({command:"whats_up",rid:"14"})),console.log("i have requested for an update.....")},R=t=>{const{game_id:o,region_id:r,competition_id:n}=t,a={command:"get",params:{source:"betting",what:{game:["info","id","team1_name","team2_name","start_ts","markets_count","strong_team","type","live_events"],market:[],event:[]},where:{competition:{id:n},region:{id:r},game:{id:o},market:{}}},rid:"18"};console.log(t,"i have requested for single game details of game_id"+o),i(JSON.stringify(a))},c=()=>{const t={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","favorite","favorite_order"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},competition:{favorite:!0}}},rid:"15"};console.log(t,"i have requested for boosted games....."),i(JSON.stringify(t))},U=()=>{const r=new Date().getTime().toString().substring(0,5).concat(38399),n=Number(r),a={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name","favorite","favorite_order"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type"],market:["name","type","market_type"],event:[]},where:{sport:{alias:"Soccer"},market:{market_type:{"@in":["MatchResult"]}},game:{start_ts:{"@gt":0,"@lte":n}}}},rid:"17"};console.log(a,"i have requested for games of today....."),i(JSON.stringify(a))},d=t=>{const{compt_id:o,reg_id:r,sport_id:n}=t,a={command:"get",params:{source:"betting",what:{sport:["alias"],region:["id","alias"],competition:["id","name"],game:["id","team1_name","team2_name","start_ts","markets_count","strong_team","type","order"],market:["name","type","market_type"],event:["id","price","order","name"]},where:{sport:{alias:"Soccer"},region:{id:r},market:{market_type:{"@in":["MatchResult"]}},competition:{id:o}}},rid:"16"};console.log(a,"i have requested for single competition of reg id"+(t==null?void 0:t.reg_id)),i(JSON.stringify(a))},b=t=>{const{compt_id:o,reg_id:r,sport_id:n}=t;switch(t==null?void 0:t.identifier){case 1:{getAllLiveGames();break}case 2:{c();break}case 3:{U();break}default:{d({compt_id:o,reg_id:r,sport_id:n});break}}},S=t=>{const{amount:o,currency:r,service:n,customer_id:a,customer_password:v}=t,p={command:"deposit",params:{amount:o,currency:r,service:n,payer:{customer_id:a,customer_password:v}},rid:"21"};console.log(p,"i have sent a deposit request to"+n),i(JSON.stringify(p))};return m.useMemo(()=>{u.isNil(h)||(I(null),setTimeout(()=>{d(h)},100))},[h]),m.useMemo(()=>{u.isNil(y)||R(y),console.log(y,"am executing the testing update....")},[y,G]),m.useMemo(()=>{if(!u.isNil(g)){const{stakeAmount:t,bets:o}=g;w(t,o),console.log(g,"i have invocked the use memo hook to place bet......")}},[g]),m.useMemo(()=>{if(!u.isNil(q)){S(q);return}},[q]),{isReady:f,swarmData:J,authData:k,placeBetRequest:w,writeSessionData:M,getUpcomingGamesByTime:N,getAllFootballGamesCollection:E,loginUserFirstTime:P,userAuth:T,placeBetRes:A,logoutUser:O,logoutRes:D,registerUser:K,registerRes:C,requestCashout:L,getAuthUserBetHistory:x,getFilteredGamesCollection:b,cashOutRes:B,getUpdatesWhatsUp:H,getSingleGameDetails:R,getBoostedGames:c,getTodayGamesByTimeStamp:U,getGameByRegionAndCompetition:d}}export{ee as F};
